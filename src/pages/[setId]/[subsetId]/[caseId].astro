---
import { CaseView, type Case } from "@/components/CaseView";
import { getBreadcrumbs } from "@/helpers/getBreadcrumbs";
import Layout from "@/layouts/Layout.astro";
import type { GetStaticPaths } from "astro";
import { getCollection, getEntry } from "astro:content";

export const getStaticPaths = (async () => {
  const cases = await Promise.all(
    (await getCollection("cases")).map(async (currentCase) => {
      const algorithms = await getCollection(
        "algorithms",
        (algorithm) => algorithm.data.caseId.id === currentCase.id,
      );
      const subset = await getEntry(currentCase.data.subsetId);

      return {
        ...currentCase.data,
        algorithms: algorithms.map((algorithm) => algorithm.data),
        subset: subset.data,
      } satisfies Case;
    }),
  );

  return cases.map((currentCase) => ({
    params: {
      setId: currentCase.subset.setId.id,
      subsetId: currentCase.subset.id,
      caseId: currentCase.id,
    },
    props: {
      currentCase,
    },
  }));
}) satisfies GetStaticPaths;

const { setId } = Astro.params;
const { currentCase } = Astro.props;

const set = await getEntry("sets", setId);
---

<Layout
  breadcrumbs={getBreadcrumbs({
    set: set?.data,
    subset: currentCase.subset,
    case: currentCase,
  })}
>
  <CaseView client:visible case={currentCase} slim={false} />
</Layout>
