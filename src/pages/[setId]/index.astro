---
import { CasesList } from "@/components/CasesList";
import type { Items } from "@/components/SetList.astro";
import SetList from "@/components/SetList.astro";
import { getBreadcrumbs } from "@/helpers/getBreadcrumbs";
import Layout from "@/layouts/Layout.astro";
import { getSetCases } from "@/queries/getSetCases";
import { getSetSubsets } from "@/queries/getSetSubsets";
import { getSubsetCases } from "@/queries/getSubsetCases";
import type { GetStaticPaths } from "astro";
import { getCollection } from "astro:content";

export const getStaticPaths = (async () => {
  const sets = await getCollection("sets");

  return sets.map((set) => ({
    params: { setId: set.id },
    props: { set: set.data },
  }));
}) satisfies GetStaticPaths;

const { setId } = Astro.params;
const { set } = Astro.props;

const subsets = await getSetSubsets(setId);
const allCases = await getSetCases(setId);

const items: Items = await Promise.all([
  {
    href: `/${setId}`,
    name: "All",
    previewAlgorithm: "",
    size: allCases.length,
    viewType: set.viewType,
  },
  ...subsets.map(async (subset) => ({
    href: `/${setId}/${subset.id}`,
    name: subset.name,
    previewAlgorithm: subset.previewAlgorithm,
    size: (await getSubsetCases(subset.id)).length,
    viewType: subset.viewType,
  })),
]);
---

<Layout breadcrumbs={getBreadcrumbs({ set })}>
  <SetList items={items} />
  <div class="mt-2 flex flex-col gap-2">
    <CasesList cases={allCases} slim />
  </div>
</Layout>
