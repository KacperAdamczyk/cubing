---
import { CasesList } from "@/components/CasesList";
import SubsetList from "@/components/SubsetList.astro";
import AppLayout from "@/layouts/AppLayout.astro";
import type { GetStaticPaths } from "astro";
import { getCollection, getEntry } from "astro:content";

export const getStaticPaths = (async () => {
  const subsets = await getCollection("subsets");
  const subsetsWithSet = await Promise.all(
    subsets.map(async (subset) => {
      const set = await getEntry("sets", subset.data.setId.id)!;

      return {
        subset: subset.data,
        set: set?.data,
      };
    }),
  );

  return subsetsWithSet.map(({ set, subset }) => ({
    params: { setId: set.id, subsetId: subset.id },
    props: { set, subset },
  }));
}) satisfies GetStaticPaths;

const { setId, subsetId } = Astro.params;
const { subset } = Astro.props;

const cases = await getCollection(
  "cases",
  (currentCase) => currentCase.data.subsetId.id === subsetId,
);
const allCases = await Promise.all(
  cases.map(async (currentCase) => {
    const algorithms = await getCollection(
      "algorithms",
      (algorithm) => algorithm.data.caseId.id === currentCase.id,
    );

    return {
      ...currentCase.data,
      subset,
      algorithms: algorithms.map((algorithm) => algorithm.data),
    };
  }),
);
---

<AppLayout>
  <SubsetList setId={setId} />
  <div class="mt-2 flex flex-col gap-2">
    <CasesList cases={allCases} slim />
  </div>
</AppLayout>
